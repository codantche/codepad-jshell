# B&K BlueJ Book


This document lists all occurrences of the term *Code Pad* in the 4th edition of *Objects First with Java* (Barnes & Kölling, 2008), including the surrounding exercises or examples.

---
title: "Occurrences of Code Pad in Barnes & Kölling (4th ed.)"
source: "Objects First with Java, 4th Edition, 2008"
author: "Marco Aurélio Souza Mangan"
language: "English with source text in Portuguese"
purpose: "Empirical data collection for Code Pad vs JShell comparison"
---

Busca no livro:
23 ocorrências de bancada (object bench)
10 ocorrências de code pad

## Page 44

Seção 2.18 Testando expressões: O Code Pad

Purpose: Introduces the Code Pad for experimenting with operators and method calls.

```
4 + 5
"Wombat".substring(2, 5)
```

## Page 45

Exercício 2.74 Considere as expressões a seguir.

```
99 + 3
"cat" + "fish"
"cat" + 9
9 + 3 + "cat"
"cat" + 3 + 9
"catfish".substring(3, 4)
"catfish".substring(3, 8)
```

Aprender algo que não esperava.

Inspecionar objetos.
Arrastar objeto para a bancada para uso adicional.

Declarar variáveis.
Escrever instruções completas.

Testar novos operadores e novas chamadas de método.

## Page 53

```
public class NumberDisplay 
{
  private int limit;
  private int value;

  public NumberDisplay(int rollOverLimit)
  {
    limit = rollOverLimit;
    value = 0;
  }

  public getValue()
  {
    return value;
  }

  public void setValue(int replacementValue)
  {
     if ((replacementValue >= 0 ) && (replacementValue < limit)) {
        value = replacementValue;
     }
  }

  public String getDisplayValue()
  {
    if (value < 10) {
       return "0" + value;
    }
    else {
       return "" + value;
    }
  }

  public void increment()
  {
    value = (value + 1) % limit;
  }
}
```

## Page 57

Exercício 3.9

```
! (4 < 5)
! false
(2 > 2) || ((4 == 4) && (1 < 0))
(2 > 2) || (4 == 4) && (1 < 0)
(34 != 33) & ! false
```


Depois de escrever suas respostas em uma folha de papel, abra o Code Pad no BlueJ e teste-o.

## Page 59

Exercício 3.17 Teste a expressão (8 % 3) no Code Pad. Tente outros números. O que acontece quando você utiliza o operador de resto com números negativos?

## Page 63

Exercício 3.25 Crie o objeto NumberDisplay com um limite de 80 no Code Pad digitando:

```
NumberDisplay nd = new NumberDisplay(80);
```


Chame então os métodos getValue(), setValue(int value) e increment() no Code Pad, [por exemplo digitando nd.getValue()].
Observe que as instruções (métodos modificadores) precisam de ponto-e-vírgula no final, ao passo que expressões (métodos de acesso) não precisam.

## Page 86

Exercício 4.14 Crie um ArrayList<String> no Code Pad digitando estas duas linhas:

```
import java.util.ArrayList;
new ArrayList<String>()
```


Se você escrever a última linha sem ponto-e-vírgula à esquerda (Nota: direita?), você verá o pequeno ícone vermelho de objeto. 
Arraste esse ícone até a bancada de objetos. 
Examine seus métodos e tente chamar alguns (como add, remove, size, isEmpty). 
Tente também chamar os mesmos métodos do Code Pad. 
Você pode acessar objetos na bancada de objetos pelo Code Pad utilizando seus nomes. 
Por exemplo, se houver um ArrayList chamado al1 na bancada de objetos, no Code Pad você poderá digitar:

```
al1.size()
```



### Summary of Findings

- Total of **10 occurrences** of *Code Pad* (pages 8, 44, 45, 57, 59, 63, 66, 17, 449, 454).
- Most mentions appear in **exercise prompts** (pages 44–86), not in the main explanatory text.
- The *Code Pad* is consistently paired with the **object bench** as a complementary tool for exploration.
- Exercises emphasize:
  - Evaluating expressions and method calls.
  - Creating and inspecting objects.
  - Understanding statement vs. expression syntax (semicolon use).
- Pedagogical implication: *Code Pad* serves as a discovery-oriented REPL, inviting learners to test and observe program behavior interactively.

